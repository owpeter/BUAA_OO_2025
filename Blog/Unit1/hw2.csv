Complexity metrics,÷‹“ª, 17 3‘¬ 2025 23:42:34 CST
Method,CogC,ev(G),iv(G),v(G)
Lexer.Lexer(String),0,1,1,1
Lexer.getNumber(),2,1,3,3
Lexer.next(),8,2,6,12
Lexer.peek(),0,1,1,1
Lexer.preProcess(String),0,1,1,1
Main.main(String[]),0,1,1,1
Parser.Parser(Lexer),0,1,1,1
Parser.parseConstant(),3,1,3,3
Parser.parseExpression(),5,1,4,4
Parser.parseFactor(),6,5,6,6
Parser.parseFactorLeft(),1,1,2,2
Parser.parseFuncExpression(),1,1,2,2
Parser.parseTerm(boolean),1,1,2,2
Parser.parseTrigonometricFunction(),2,2,2,2
Parser.parseVariable(),2,2,2,2
expr.Constant.Constant(String),0,1,1,1
expr.Constant.toMono(),0,1,1,1
expr.Constant.toPoly(),0,1,1,1
expr.Expression.Expression(),0,1,1,1
expr.Expression.addTerm(Term),0,1,1,1
expr.Expression.setExponential(String),0,1,1,1
expr.Expression.toMono(),0,1,1,1
expr.Expression.toPoly(),6,1,4,4
"expr.RecursiveFunc.callFunc(String, Integer, ArrayList<Factor>)",3,1,3,3
expr.RecursiveFunc.paraLength(String),0,1,1,1
expr.RecursiveFunc.setFunc(Scanner),1,1,2,2
expr.Term.Term(boolean),0,1,1,1
expr.Term.addFactor(Factor),0,1,1,1
expr.Term.toPoly(),7,1,4,6
"expr.TrigonometricFunction.TrigonometricFunction(String, Factor, BigInteger)",0,1,1,1
expr.TrigonometricFunction.toMono(),21,7,11,15
expr.TrigonometricFunction.toPoly(),0,1,1,1
expr.Variable.Variable(String),0,1,1,1
expr.Variable.toMono(),0,1,1,1
expr.Variable.toPoly(),0,1,1,1
"poly.Add.monoAdd(Mono, Mono)",0,1,1,1
"poly.Add.polyAdd(Poly, Poly)",1,1,2,2
"poly.Math.isPowerOfTwoNMultipliedByMTwo(BigInteger, BigInteger)",3,3,2,4
"poly.Mono.Mono(BigInteger, BigInteger)",0,1,1,1
"poly.Mono.addCosTrig(Poly, BigInteger)",0,1,1,1
"poly.Mono.addSinTrig(Poly, BigInteger)",0,1,1,1
"poly.Mono.areMapsEqualExcludingPowerTwo(HashMap<Poly, BigInteger>, HashMap<Poly, BigInteger>)",0,1,1,1
poly.Mono.copy(),0,1,1,1
poly.Mono.copy(boolean),5,1,4,4
poly.Mono.equals(Object),4,3,4,6
poly.Mono.getCoe(),0,1,1,1
poly.Mono.getCosMap(),0,1,1,1
poly.Mono.getExp(),0,1,1,1
poly.Mono.getSinMap(),0,1,1,1
poly.Mono.hashCode(),0,1,1,1
"poly.Mono.isSingleSinCosPair(HashSet<Poly>, HashSet<Poly>, HashSet<Poly>, HashSet<Poly>)",4,3,9,9
poly.Mono.isZero(),0,1,1,1
"poly.Mono.removeSinCosEntriesWithPowerTwo(HashMap<Poly, BigInteger>, HashMap<Poly, BigInteger>, HashSet<Poly>)",4,1,3,3
poly.Mono.setCoe(BigInteger),0,1,1,1
poly.Mono.setExp(BigInteger),0,1,1,1
poly.Mono.toOne(Mono),5,4,3,6
poly.Mono.toString(boolean),0,1,1,1
poly.Mono.twiceMono(),0,1,1,1
"poly.Multiply.monoMultiply(Mono, Mono)",2,1,3,3
"poly.Multiply.monoMultiplyNew(Mono, Mono)",0,1,1,1
"poly.Multiply.polyMultiply(Poly, Poly)",3,1,3,3
"poly.Multiply.polyMultiplyMono(Poly, Mono)",1,1,2,2
poly.Poly.Poly(),0,1,1,1
poly.Poly.addMono(Mono),8,4,4,6
poly.Poly.allZero(),4,4,2,4
poly.Poly.copy(),1,1,2,2
poly.Poly.equals(Object),13,8,5,10
poly.Poly.getMonos(),3,1,3,3
poly.Poly.hashCode(),3,1,3,3
poly.Poly.negative(),1,1,2,2
poly.Poly.setMonos(List<Mono>),0,1,1,1
poly.Poly.toString(),0,1,1,1
poly.Poly.twicePoly(),0,1,1,1
"poly.Power.polyPower(Poly, BigInteger)",1,1,2,2
"poly.TrigSimpify.simplifyAddCosMap(Mono, Poly, BigInteger)",4,3,4,4
"poly.TrigSimpify.simplifyAddSinMap(Mono, Poly, BigInteger)",6,3,5,5
"poly.TrigSimpify.twiceTrig(String, Mono, Poly, BigInteger)",7,3,5,5
"procstring.FunctionDefinitionParser.ParsedResult.ParsedResult(String, String, ArrayList<String>, String)",0,1,1,1
procstring.FunctionDefinitionParser.ParsedResult.getExpression(),0,1,1,1
procstring.FunctionDefinitionParser.ParsedResult.getFunctionName(),0,1,1,1
procstring.FunctionDefinitionParser.ParsedResult.getParameters(),0,1,1,1
procstring.FunctionDefinitionParser.ParsedResult.getSequenceNumber(),0,1,1,1
procstring.FunctionDefinitionParser.parse(String),2,2,2,3
procstring.PreProcess.prePreProcess(String),4,1,4,4
"procstring.PreProcess.process(Integer, String)",53,1,22,26
procstring.ToString.allZero(Poly),4,4,2,4
"procstring.ToString.appendCoeWithX(StringBuilder, Mono)",3,1,3,3
"procstring.ToString.monoToString(Mono, boolean)",9,2,7,8
procstring.ToString.needsExtraParentheses(Poly),7,4,6,8
procstring.ToString.onlyTrigWithCoeOneOrMinusOne(Mono),3,1,5,5
procstring.ToString.polyToString(Poly),8,2,4,5
"procstring.ToString.trigToString(StringBuilder, Mono)",16,1,9,9

Class,OCavg,OCmax,WMC
Lexer,2.40,7,12
Main,1.00,1,1
Parser,2.44,5,22
expr.Constant,1.00,1,3
expr.Expression,1.60,4,8
expr.RecursiveFunc,2.00,3,6
expr.Term,2.00,4,6
expr.TrigonometricFunction,4.67,12,14
expr.Variable,1.00,1,3
poly.Add,1.50,2,3
poly.Math,4.00,4,4
poly.Mono,1.60,4,32
poly.Multiply,2.25,3,9
poly.Poly,2.91,8,32
poly.Power,2.00,2,2
poly.TrigSimpify,4.00,5,12
procstring.FunctionDefinitionParser,3.00,3,3
procstring.FunctionDefinitionParser.ParsedResult,1.00,1,5
procstring.PreProcess,9.50,16,19
procstring.ToString,4.71,9,33

Package,v(G)avg,v(G)tot
,2.87,43
expr,2.25,45
poly,2.60,109
procstring,5.33,80

Module,v(G)avg,v(G)tot
oo_homework_2025_23373193_hw_2,3.01,277

Project,v(G)avg,v(G)tot
project,3.01,277

